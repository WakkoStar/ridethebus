{"version":3,"sources":["Components/Card.js","Components/CardGame.js","Components/App.js","index.js"],"names":["Card","id","i","currentIndex","className","style","opacity","boxShadow","src","alt","dataCards","symbols","value","name","Game","useState","availCards","setAvailCards","takenCards","setTakenCards","dispCards","setDispCards","currentCard","setCurrentCard","setCurrentIndex","message","setMessage","error","setError","play","amount","deck","newGame","_deck","randIndex","Math","floor","random","length","newCard","push","filter","card","index","err","initCards","deckAmount","newDeck","d","_symbol","j","_value","generateDeck","useEffect","chechUserChoice","choice","concat","generateNewCard","execFunction","map","bCheckAnswer","checkAnswer","setTimeout","indexOffset","$","offset","vw","window","width","cardPosition","addClass","css","top","left","removeClass","alert","key","onClick","disabled","App","CardGame","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1d527ceb.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Card = ({id, i, currentIndex}) => {\r\n\r\n  return(\r\n    <div id={i} className=\"card\" style={{opacity: currentIndex > i ? \"0.1\" : 1, boxShadow: currentIndex === i ? \"rgb(48 56 152 / 64%) 0px 0px 18px 5px\" : \"\"}}>\r\n      <img src={`../ridethebus/card_picture/${id}.png`} alt=\"card\"/>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default Card\r\n","import React, {useState, useEffect} from 'react';\r\nimport Card from \"./Card\"\r\nimport $ from 'jquery'\r\n\r\nconst dataCards = {\r\n  symbols: [\"C\", \"D\", \"H\", \"S\"], //trèfle, carreau, coeur, pique\r\n  value: [2,3,4,5,6,7,8,9,10,11,12,13,14],\r\n  name: [\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"J\",\"Q\",\"K\",\"A\"]\r\n}\r\n\r\nconst Game = () => {\r\n  const [availCards, setAvailCards] = useState([])\r\n  const [takenCards, setTakenCards] = useState([])\r\n  const [dispCards, setDispCards] = useState([])\r\n  const [currentCard, setCurrentCard] = useState({})\r\n\r\n  const [currentIndex, setCurrentIndex] = useState(0)\r\n  const [message, setMessage] = useState(\"Ride the bus !\")\r\n  const [error, setError] = useState(true)\r\n\r\n  const generateDeck = (deckAmount) => {\r\n    let newDeck = [];\r\n\r\n    for(var d = 0; d < deckAmount; d++){\r\n\r\n        for (var i = 0; i < dataCards.symbols.length; i++) {\r\n          const _symbol = dataCards.symbols[i]\r\n\r\n          for (var j = 0; j < dataCards.value.length; j++) {\r\n            const _value = dataCards.value[j]\r\n            const _name = dataCards.name[j]\r\n            //push a new card in the deck\r\n            const card = {\r\n              id: _name + _symbol,\r\n              value: _value\r\n            }\r\n            newDeck.push(card)\r\n          }\r\n\r\n        }\r\n\r\n    }\r\n    return newDeck\r\n  }\r\n\r\n\r\n  const initCards = (amount, deck) => {\r\n    let newGame = []\r\n    let _deck = deck\r\n    for (var i = 0; i < amount; i++) {\r\n      const randIndex = Math.floor(Math.random() * _deck.length)\r\n\r\n      let newCard = _deck[randIndex]\r\n      newGame.push(newCard)\r\n      _deck = _deck.filter((card, index) => index !== randIndex)\r\n    }\r\n\r\n    setDispCards(newGame)\r\n    setTakenCards(newGame)\r\n    setAvailCards(_deck)\r\n\r\n    setCurrentIndex(0)\r\n    setError((err) => !err) //tqt ( du premier coup > une erreur, tu as gagné > aucune erreur, plus de cartes > garde l'erreur)\r\n    setMessage(\"Ride the bus\")\r\n  }\r\n\r\n  const play = () => initCards(5, generateDeck(2))\r\n\r\n  useEffect(() => {\r\n    play()\r\n  }, [])\r\n\r\n\r\n  const generateNewCard = () => {\r\n    const randIndex = Math.floor(Math.random() * availCards.length)\r\n    let newCard = availCards[randIndex]\r\n\r\n    setTakenCards(takenCards.concat(newCard))\r\n    setAvailCards(availCards.filter((card, index) => index !== randIndex))\r\n    setCurrentCard(newCard)\r\n\r\n    return newCard\r\n  }\r\n\r\n  const checkAnswer = (choice, card) => {\r\n    let answer;\r\n    if(card.value > dispCards[currentIndex].value){\r\n      answer = 2 //plus\r\n    }else if(card.value < dispCards[currentIndex].value){\r\n      answer = 0 //moins\r\n    }else {\r\n      answer = 1 //poteau\r\n    }\r\n    return choice === answer\r\n  }\r\n\r\n  const animCard = (execFunction) => {\r\n\r\n    setTimeout(() => {\r\n\r\n      const indexOffset = $(`#${currentIndex}`).offset()\r\n      const vw = $( window ).width()/100 * 2\r\n      const cardPosition = $('#newCard').offset()\r\n\r\n      $('#newCard').addClass('sided')\r\n      setTimeout(() => {\r\n        \r\n        $('#newCard').css(\"margin-top\", indexOffset.top )\r\n        $('#newCard').css(\"margin-left\", -cardPosition.left + indexOffset.left + vw )\r\n\r\n        $('#newCard').addClass('moved')\r\n          setTimeout(() => {\r\n            $('#newCard').removeClass(`moved`)\r\n\r\n            $('#newCard').css(\"margin-top\", \"0px\")\r\n            $('#newCard').css(\"margin-left\", \"0px\")\r\n\r\n            $('#newCard').addClass(`reset`)\r\n            $('#newCard').removeClass('sided')\r\n            execFunction()\r\n          },700)\r\n      }, 1500)\r\n    }, 600)\r\n  }\r\n\r\n  const chechUserChoice = (choice) => {\r\n\r\n    //check decks\r\n    if(availCards.length !== 0) {\r\n      const newCard = generateNewCard()\r\n      setMessage(\"...\")\r\n      const executeCard = () => {\r\n\r\n        setDispCards(dispCards.map((card,index) => {\r\n          if(index === currentIndex) return newCard\r\n          return card\r\n        }))\r\n\r\n        const bCheckAnswer = checkAnswer(choice, newCard)\r\n\r\n        //set the current index\r\n        if(bCheckAnswer) {\r\n          setCurrentIndex((currentIndex) => currentIndex + 1)\r\n        }else {\r\n          setCurrentIndex(0)\r\n          setError(true)\r\n        }\r\n\r\n        //set the message\r\n        if(bCheckAnswer && newCard.value === dispCards[currentIndex].value){\r\n          setMessage(\"Tu distribues un poteau ! Cul sec !\")\r\n        }else if(bCheckAnswer){\r\n          setMessage(\"Carte suivante\")\r\n        }else if(!bCheckAnswer && newCard.value === dispCards[currentIndex].value){\r\n          setMessage(\"Tu prends un poteau ! Cul sec !\")\r\n        }else if(!bCheckAnswer && choice === 1){\r\n          setMessage(\"Faux, tu prends un poteau ! Cul sec !\")\r\n        }else if(!bCheckAnswer){\r\n          setMessage(`Tu bois ${currentIndex + 1} gorgées`)\r\n        }\r\n      }\r\n\r\n      animCard(executeCard)\r\n    }else{\r\n      alert(\"Plus de cartes ! Relance de la partie !\")\r\n      setError(false)//tqt c normal\r\n      play()\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div className=\"game\">\r\n\r\n      <div className=\"card-container\">\r\n        <div className=\"flip-card\" id=\"newCard\">\r\n          <div className=\"flip-card-inner\">\r\n            <div className=\"flip-card-front\">\r\n              <img src={`../ridethebus/card_picture/red_back.png`}/>\r\n            </div>\r\n            <div className=\"flip-card-back\">\r\n              <img src={`../ridethebus/card_picture/${currentCard.id}.png`} width=\"100px\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {\r\n        currentIndex !== dispCards.length ? <h1>{message}</h1> : <h1>{error ? \"Tu as gagné\": \"Tu ne peux pas tout faire une fois ! Cul sec !\"}</h1>\r\n      }\r\n\r\n      <div className=\"cards-table\">\r\n      {\r\n        dispCards.map((card, index) => {\r\n          return(\r\n            <Card id={card.id} key={index} i={index} currentIndex={currentIndex}/>\r\n          )\r\n        })\r\n      }\r\n      </div>\r\n\r\n      <div className=\"buttons\">\r\n        <button onClick={() => chechUserChoice(0)} disabled={currentIndex === dispCards.length || message === \"...\"} className=\"green\">MOINS</button>\r\n        {\r\n          currentIndex === dispCards.length ? (\r\n            <button onClick={play} className=\"grey\">REJOUER</button>\r\n          ):(\r\n            <button onClick={() => chechUserChoice(1)} disabled={message === \"...\"} className=\"grey\">POTEAU</button>\r\n          )\r\n        }\r\n        <button onClick={() => chechUserChoice(2)} disabled={currentIndex === dispCards.length || message === \"...\"} className=\"orange\">PLUS</button>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Game\r\n","import React from 'react';\nimport CardGame from './CardGame'\nimport \"../App.scss\"\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CardGame/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}